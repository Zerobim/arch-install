#+TITLE: An example of arch linux installation

* Status
It works!!. Options are really limited, though. And it might fail if something
changes.

* Purpose
This repository contains a script that allows to install Arch linux on a new
machine, with all the configuration needed to have a running system.

Most if not all the information appearing here was taken from the [[https://wiki.archlinux.org/index.php/Installation_guide][arch wiki
installation guide]], so this is just a reference for me and maybe educational
purposes.

There may be more or better things like this, but this might serve as reference
for somebody having problems with the installation, and I think its not a bad
exercise.

* How it works
The file ~arch-install.org~ contains a recopilation of the information in the
[[https://wiki.archlinux.org/index.php/Installation_guide][arch wiki installation guide]] and maybe other sources in ~org~ format. The code
snippets this file contains are tangled to generate the required scripts to
install the system.

- ~custom.sh~: Configuration / customization of the changeable values. You should
  define the environment you want with these.
- ~install.sh~: Launch script. Redirects ~stderr~ and ~stdout~ to be able to access
  the information in case of an error.
- ~run_in_{live,system}.sh~: Code to run in the live system or the installed
  system.

* Usage
- *!!! WARNING !!!* use this at your own risk. *YOU WILL LOSE DATA* if you run this
  without understanding what it does. I'm not liable for any damage caused by
  running any of this scripts.
- *NOTE* : Scripts may only be up to date in ~master~ branch.

  How to use it:

  1. Download this repository. The default arch image might require you to
     install ~git~.
  2. Check ~custom.sh~ and adapt the values there to your liking.
  3. Run ~./install.sh~. Output is stored in ~install.{out,err}~. ~stdout~ is also
     displayed.
  4. Check everything is correct and ~reboot~. The system should work.

Alternatively, run the following on the arch live system:

#+BEGIN_SRC shell
pacman -Sy git
git clone 'https://github.com/Zerobim/arch-install.git'
cd arch-install
# git checkout dev
./install.sh
#+END_SRC

Note: ~loadkeys~ may be useful to set keyboard layout.

* Tasks
** Next

** To do
  + [ ] Test CUPS
    - [ ] Test web interface is accesible ~localhost:631~ with root user login.
    - [ ] Test add printer and print test page
  + [ ] Install and set default terminal
    - [ ] Install alacritty
    - [ ] Install xterm as fallback
    - [ ] Set $TERMINAL in pam
  + [ ] Check micro-code installed properly after first reboot
  + [ ] Store password in encrypted format
  + [ ] Rename ~custom.sh~ to ~defaults.sh~ and ~override_custom.sh~ to ~custom.sh~.
  + [ ] Stop if network check fails
  + [ ] Allow to specify partitioning scheme file for ~sfdisk~.
  + [ ] Calculate Swap from RAM
  + [ ] Install fonts
    - [ ] awesome and fonts with ligatures
  + [ ] Install dmenu and rofi
  + [ ] Load custom config
    - [ ] I3
    - [ ] I3blocks
    - [ ] Alacritty
  + [ ] Configure lightdm to work with webkit-theme-litarvan
  + [ ] Make script for laptops to dim screen with xbacklight
  + [ ] Install unclutter
  + [ ] Configure xcape for capsLock = Escape
  + [ ] Add remainder to manually configure DPMS times
  + [ ] Make screen dimming work with a timer or DPMS
  + [ ] Add remainder to use the default i3 config or accept creating a new one
  + [ ] Configure basic environment variables
    - [ ] Test they show in bash

** Maybe
  + [ ] ACPI events
  + [ ] CPU frequency scaling
  + [ ] Laptops
  + [ ] Suspend and hibernate
  + [ ] DNSSec enabled resolver
  + [ ] Firewall
  + [ ] Install Touchpad drivers
  + [ ] Separate configuration files
    - [ ] For packages
    - [ ] For live / system
  + [ ] Configure extra software
    - [ ] Fonts
    - [ ] ZSH
  + [ ] Simplify partition handling
  + [ ] Separate instructions for BIOS and UEFI partitioning
  + [ ] Instructions to connect to a wireless network from the live system.
  + [ ] Auto select required micro code package.
  + [ ] UEFI instructions for GRUB.
  + [ ] Check architecture for installing GRUB.
  + [ ] Change default time for GRUB.
  + [ ] Fill up explanation about ~hwclock~ properly.
    - [ ] Why is it needed.
  + [ ] Create non existing groups
  + [ ] Add user to group
  + [ ] Check DPMS to turn off monitor
  + [ ] Check / Install picom
  + [ ] Check rest of Xorg page
  + [ ] Check I3 tips and tricks
  + [ ] Parameterize X keyboard configuration
