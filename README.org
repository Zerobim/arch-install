#+TITLE: An example of arch linux installation

* Status
It works!!. Options are really limited, though. And it might fail if something
changes.

* Purpose
This repository contains a script that allows to install Arch linux on a new
machine, with all the configuration needed to have a running system.

Most if not all the information appearing here was taken from the [[https://wiki.archlinux.org/index.php/Installation_guide][arch wiki
installation guide]], so this is just a reference for me and maybe educational
purposes.

There may be more or better things like this, but this might serve as reference
for somebody having problems with the installation, and I think its not a bad
exercise.

* How it works
The file ~arch-install.org~ contains a recopilation of the information in the
[[https://wiki.archlinux.org/index.php/Installation_guide][arch wiki installation guide]] and maybe other sources in ~org~ format. The code
snippets this file contains are tangled to generate the required scripts to
install the system.

- ~custom.sh~: Configuration / customization of the changeable values. You should
  define the environment you want with these.
- ~install.sh~: Launch script. Redirects ~stderr~ and ~stdout~ to be able to access
  the information in case of an error.
- ~run_in_{live,system}.sh~: Code to run in the live system or the installed
  system.

* Usage
- *!!! WARNING !!!* use this at your own risk. *YOU WILL LOSE DATA* if you run this
  without understanding what it does. I'm not liable for any damage caused by
  running any of this scripts.
- *NOTE* : Scripts may only be up to date in ~master~ branch.

  How to use it:

  1. Download this repository. The default arch image might require you to
     install ~git~.
  2. Check ~custom.sh~ and adapt the values there to your liking.
  3. Run ~./install.sh~. Output is stored in ~install.{out,err}~. ~stdout~ is also
     displayed.
  4. Check everything is correct and ~reboot~. The system should work.

Alternatively, run:
#+BEGIN_SRC shell
curl 'https://raw.githubusercontent.com/Zerobim/arch-install/dev/install.sh' | bash
#+END_SRC

Note: ~loadkeys~ may be useful to set keyboard layout.

* Tasks
** Next
- [X] Tested ~set~ works.
- [X] Create a non root user.
  + [X] Create a new user.
  + [X] Test user is created after reboot
- [X] Allow to override values from ~custom.sh~
  + [X] Source ~override_custom.sh~ at the end of ~custom.sh~
  + [X] Copy ~override_custom.sh~ from live to the system
  + [X] Tested changing user name on script
  + [X] Test user name is different after reboot
- [X] Cabled internet works after reboot
  + [X] Install dhcp client
  + [X] Test ping archlinux.org
- [X] TAB completion for bash works
  + [X] Install TAB completion
  + [X] Tested. NOT. Should be read by default.
- [-] Finish a desktop environment installation
  + [X] Sudo is usable after reboot for unprivileged user
    - [X] Install sudo
    - [X] Configure ~sudo~ group as run with password
    - [X] Add user to ~sudo~ group
    - [X] Test user can ~sudo -l~
    - [X] Test user can ~sudo cat /etc/sudoers~.
  + [X] Remove beeping
    - [X] Dont load ~pcspkr~ kernel module
    - [X] Test pressing left when logged in
  + [X] Install Xorg
    - [X] Add package to the install list
    - [X] Tested running i3
  + [X] Install Intel/nvidia drivers
    - [X] Detect which one should be installed
    - [X] Add package to list
    - [X] Test they are added to the package list
  + [X] Install DE / WM
    - [X] Install i3-wm, i3blocks, i3status, i3lock
    - [X] Install xterm as fallback terminal
    - [X] Test it starts after installing xinit
  + [X] Install a display manager
    - [X] Install lightdm with the default theme
    - [X] Test can choose i3 session
  + [-] Install ~xdg-user-dirs~
    - [X] Install package
    - [ ] Test directories are there after reboot
  + [X] Install web browser
    - [X] Install firefox
    - [X] Test navigate to ~wiki.archlinux.org~
  + [X] Make sound work
    - [X] Install ~pulseaudio~
    - [X] Install fronted GUI (~pavucontrol~)
    - [X] Install fronted TUI (~pulsemixer~)
    - [X] Test audio works in firefox with jack after unmuting
    - [X] Test gui (~pavucontrol~). Sound when changing volume.
    - [X] Test tui(~pulsemixer~). Changes sound properly.
  + [X] Configure X keyboard layout
    - [X] Set layout to es
    - [X] Enable killing Xorg with C-M-BKSP
    - [X] Enable CAPSLOCK = CTRL
    - [X] Test writing on terminal
    - [X] Test killing Xorg with C-M-BKSP
    - [X] Test CAPSLOCK = CTRL
  + [X] Install ~mlocate~
  + [X] Install notification daemon
    - [X] dunst
    - [X] Test network connected notification appears after boot
    - [X] Test send notification with dunstify
    - [X] Test send notification with notify-send
  + [-] Install CUPS
    - [X] Install ~cups~ and ~ghostscript~.
    - [ ] Test web interface is accesible ~localhost:631~ with root user login.
    - [ ] Test add printer and print test page
  + [X] Configure DPMS & session locking
    - [X] Lock session with xss-lock & i3lock
    - [X] Configure Standby time
    - [X] Configure Suspend time
    - [X] Configure Off time
    - [X] Configure Screensaver time
    - [X] Configure inactivity lock for before screen turns off
    - [X] Test manual lock with ~loginctl lock-session~.
    - [X] Test inactivity lock
    - [X] Test system is locked after screensaver
    - [X] Test system is locked after suspend
  + [-] Configure basic environment variables
    - [X] Add them to ~/etc/environment~
    - [ ] Test they show in bash
- [X] Add installation of git to install.sh

** To do
  + [ ] Install and set default terminal
    - [ ] Install alacritty
    - [ ] Install xterm as fallback
    - [ ] Set $TERMINAL in pam
  + [ ] Check micro-code installed properly after first reboot
  + [ ] Store password in encrypted format
  + [ ] Rename ~custom.sh~ to ~defaults.sh~ and ~override_custom.sh~ to ~custom.sh~.
  + [ ] Stop if network check fails
  + [ ] Allow to specify partitioning scheme file for ~sfdisk~.
  + [ ] Calculate Swap from RAM
  + [ ] Install fonts
    - [ ] awesome and fonts with ligatures
  + [ ] Install dmenu and rofi
  + [ ] Load custom config
    - [ ] I3
    - [ ] I3blocks
    - [ ] Alacritty
  + [ ] Configure lightdm to work with webkit-theme-litarvan
  + [ ] Make script for laptops to dim screen with xbacklight
  + [ ] Install unclutter
  + [ ] Configure xcape for capsLock = Escape
  + [ ] Add remainder to manually configure DPMS times
  + [ ] Make screen dimming work with a timer or DPMS
  + [ ] Add remainder to use the default i3 config or accept creating a new one

** Maybe
  + [ ] ACPI events
  + [ ] CPU frequency scaling
  + [ ] Laptops
  + [ ] Suspend and hibernate
  + [ ] DNSSec enabled resolver
  + [ ] Firewall
  + [ ] Install Touchpad drivers
  + [ ] Separate configuration files
    - [ ] For packages
    - [ ] For live / system
  + [ ] Configure extra software
    - [ ] Fonts
    - [ ] ZSH
  + [ ] Simplify partition handling
  + [ ] Separate instructions for BIOS and UEFI partitioning
  + [ ] Instructions to connect to a wireless network from the live system.
  + [ ] Auto select required micro code package.
  + [ ] UEFI instructions for GRUB.
  + [ ] Check architecture for installing GRUB.
  + [ ] Change default time for GRUB.
  + [ ] Fill up explanation about ~hwclock~ properly.
    - [ ] Why is it needed.
  + [ ] Create non existing groups
  + [ ] Add user to group
  + [ ] Check DPMS to turn off monitor
  + [ ] Check / Install picom
  + [ ] Check rest of Xorg page
  + [ ] Check I3 tips and tricks
  + [ ] Parameterize X keyboard configuration
